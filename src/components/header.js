// Composant header
// =============================================

// generation de la page
import React, { Component } from 'react';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import { Link } from 'react-router-dom'
import { toggleBurger } from '../store/action-creators';

// tierces
import { throttle } from 'lodash';

const COMPONENT_DEFAULT_STATE = {
	headerFix: false
};

export class Header extends Component {

	constructor(props) {
		super(props);
		this.state = COMPONENT_DEFAULT_STATE;
		this.listenScrollEvent = this.listenScrollEvent.bind(this);
	}

	listenScrollEvent() {
		let scrollPos = window.pageYOffset;
		if (scrollPos <= 1) {
			this.setState({ headerFix: false });
		} else {
			this.setState({ headerFix: true });
		}
	}

	componentDidMount() {
		window.addEventListener('scroll', throttle(this.listenScrollEvent, 100));
	}
	componentWillUnmount() {
		window.removeEventListener('scroll', this.listenScrollEvent);
	}

	render() {

		const { page } = this.props;

		let brand;
		if (page === 'page-home') {
			brand =
				<div className="branding" role="heading">
					<svg xmlns="http://www.w3.org/2000/svg" aria-labelledby="elbakin">
						<title id="elbakin">Elbakin.net, la Fantasy au quotidien</title>
						<path fill="currentColor" d=" M 62.330342596771956 0 C 62.330342596771956 0 71.17585147574775 5.79456987677172 73.92100940370575 14.94389073483233 C 73.92100940370575 14.94389073483233 70.75645234786528 12.199094477414148 67.05811458381075 10.369230305802025 C 66.82935142314757 7.014479324513135 62.330342596771956 0 62.330342596771956 0 Z  M 43.26674587484136 39.79954573256366 C 43.26674587484136 39.79954573256366 44.28367437837603 35.834840027404056 50.180578625177375 35.63172510435511 C 57.299688185015135 35.38621832799715 62.99131562231473 49.660683753381385 50.43465824228726 51.38868548610709 C 50.43465824228726 51.38868548610709 55.26430609020805 48.033934504818205 53.789851265347046 42.849319351917195 C 51.65472843249082 46.35655901417376 48.909570504532816 46.96651373804447 48.909570504532816 46.96651373804447 C 48.909570504532816 46.96651373804447 54.24737758667338 35.834840027404056 43.26674587484136 39.79954573256366 Z  M 42.80921955351503 6.709501962577781 C 36.861377376272685 7.166968005480812 4.834534883429282 31.717645641276782 22.37304386760543 64.35022336835962 C 22.37304386760543 64.35022336835962 13.985061309955967 58.20004988757129 13.781919623287076 48.64388922868891 C 4.326375649209502 54.540321544347044 4.6820261096538385 71.21221401190509 4.6820261096538385 71.21221401190509 C -5.434185872418961 57.48823272481417 -1.8758511626902856 11.029811271754001 42.80921955351503 6.709501962577781 Z " />
						<path fill="currentColor" d=" M 53.33232494402071 59.16560821545861 C 46.54690458120363 57.32567979090263 40.82660549443425 51.9986402099778 40.82660549443425 43.154296713852546 C 40.82660549443425 35.07239662256568 47.00443090252996 26.838007850311126 57.14504428840684 26.838007850311126 C 65.73616853272519 26.838007850311126 71.93839534462498 30.80271355547072 78.34376384319366 39.34207968966062 L 86.2742200795168 31.565156960309107 C 82.61400950890612 23.483256869022235 68.2781847740143 6.709501962577781 47.23197399300293 6.404524600642428 C 47.23197399300293 6.404524600642428 51.80723720626628 7.319456686448488 57.90758815728407 12.199094477414148 C 41.33903497431975 10.158795926066633 24.256222206184628 25.65012102557292 24.256222206184628 43.89020708820256 C 24.256222206184628 61.45690313567893 38.233346305156594 74.87987176653965 53.78985126534706 73.65203290738792 C 71.17585147574776 72.27963477867883 74.98857082013387 53.82850438158992 86.57923762706768 52.30361757191316 C 86.57923762706768 52.30361757191316 81.546448092478 56.26832327707275 79.8688515809481 65.41764413513337 C 89.47690432880113 52.15112889094548 100.00000971930682 51.38868548610709 100.00000971930682 51.38868548610709 C 75.90362346278654 37.35972683708083 71.3283602495232 64.04524600642428 53.332324944020726 59.16560821545861 L 53.33232494402071 59.16560821545861 Z  M 75.4460971414602 26.380541807408093 C 73.46348308237943 25.008143678699003 70.71832515442142 25.770587083537386 70.71832515442142 25.770587083537386 L 66.95654374047629 19.36606248289496 C 71.83682450129052 20.38285700758743 75.4460971414602 26.380541807408093 75.4460971414602 26.380541807408093 Z " />
					</svg>
				</div>;
		} else {
			brand =
				<div className="branding" role="heading">
					<a href="/">
						<svg xmlns="http://www.w3.org/2000/svg" aria-labelledby="elbakin">
							<title id="elbakin">Elbakin.net, la Fantasy au quotidien</title>
							<path fill="currentColor" d=" M 62.330342596771956 0 C 62.330342596771956 0 71.17585147574775 5.79456987677172 73.92100940370575 14.94389073483233 C 73.92100940370575 14.94389073483233 70.75645234786528 12.199094477414148 67.05811458381075 10.369230305802025 C 66.82935142314757 7.014479324513135 62.330342596771956 0 62.330342596771956 0 Z  M 43.26674587484136 39.79954573256366 C 43.26674587484136 39.79954573256366 44.28367437837603 35.834840027404056 50.180578625177375 35.63172510435511 C 57.299688185015135 35.38621832799715 62.99131562231473 49.660683753381385 50.43465824228726 51.38868548610709 C 50.43465824228726 51.38868548610709 55.26430609020805 48.033934504818205 53.789851265347046 42.849319351917195 C 51.65472843249082 46.35655901417376 48.909570504532816 46.96651373804447 48.909570504532816 46.96651373804447 C 48.909570504532816 46.96651373804447 54.24737758667338 35.834840027404056 43.26674587484136 39.79954573256366 Z  M 42.80921955351503 6.709501962577781 C 36.861377376272685 7.166968005480812 4.834534883429282 31.717645641276782 22.37304386760543 64.35022336835962 C 22.37304386760543 64.35022336835962 13.985061309955967 58.20004988757129 13.781919623287076 48.64388922868891 C 4.326375649209502 54.540321544347044 4.6820261096538385 71.21221401190509 4.6820261096538385 71.21221401190509 C -5.434185872418961 57.48823272481417 -1.8758511626902856 11.029811271754001 42.80921955351503 6.709501962577781 Z " />
							<path fill="currentColor" d=" M 53.33232494402071 59.16560821545861 C 46.54690458120363 57.32567979090263 40.82660549443425 51.9986402099778 40.82660549443425 43.154296713852546 C 40.82660549443425 35.07239662256568 47.00443090252996 26.838007850311126 57.14504428840684 26.838007850311126 C 65.73616853272519 26.838007850311126 71.93839534462498 30.80271355547072 78.34376384319366 39.34207968966062 L 86.2742200795168 31.565156960309107 C 82.61400950890612 23.483256869022235 68.2781847740143 6.709501962577781 47.23197399300293 6.404524600642428 C 47.23197399300293 6.404524600642428 51.80723720626628 7.319456686448488 57.90758815728407 12.199094477414148 C 41.33903497431975 10.158795926066633 24.256222206184628 25.65012102557292 24.256222206184628 43.89020708820256 C 24.256222206184628 61.45690313567893 38.233346305156594 74.87987176653965 53.78985126534706 73.65203290738792 C 71.17585147574776 72.27963477867883 74.98857082013387 53.82850438158992 86.57923762706768 52.30361757191316 C 86.57923762706768 52.30361757191316 81.546448092478 56.26832327707275 79.8688515809481 65.41764413513337 C 89.47690432880113 52.15112889094548 100.00000971930682 51.38868548610709 100.00000971930682 51.38868548610709 C 75.90362346278654 37.35972683708083 71.3283602495232 64.04524600642428 53.332324944020726 59.16560821545861 L 53.33232494402071 59.16560821545861 Z  M 75.4460971414602 26.380541807408093 C 73.46348308237943 25.008143678699003 70.71832515442142 25.770587083537386 70.71832515442142 25.770587083537386 L 66.95654374047629 19.36606248289496 C 71.83682450129052 20.38285700758743 75.4460971414602 26.380541807408093 75.4460971414602 26.380541807408093 Z " />
						</svg>
					</a>
				</div>;
		}

		return (
			<header role="banner" className={"the-header m-header " + (this.state.headerFix ? 'is-header-fixed' : '')}>
				{brand}
				<div className="the-header__container">
					<div className="the-header__container-inner">
						<div className="the-header__container-inner-part-one">
							<span role="button" className="menu-trigger" id="trigger" title="Parcourir le menu du site" onClick={this.props.toggleBurger}>
								<span className="icon icon-burger" aria-hidden="true"></span>
								<span>Explorer</span>
							</span>
							<a href="/forum" className="btn-forum" title="Visiter le forum">
								<svg viewBox="0 0 100 100" width="30" height="30" aria-hidden="true" focusable="false">
									<use xlinkHref="#bubbles"></use>
								</svg>
								<span>Forum</span>
							</a>
						</div>
						<div className="the-header__container-inner-part-two">
							<ul className="social">
								<li>
									<a href="https://www.facebook.com/Elbakin.net" title="Profil Facebook Elbakin.net [nouvelle fenêtre]" target="_blank" rel="noopener noreferrer">
										<svg viewBox="0 0 100 100" width="30" height="30" aria-hidden="true" focusable="false" aria-label="Facebook">
											<use xlinkHref="#facebook"></use>
										</svg>
									</a>
								</li>
								<li>
									<a href="https://twitter.com/elbakin" title="Compte Twitter Elbakin.net [nouvelle fenêtre]" target="_blank" rel="noopener noreferrer">
										<svg viewBox="0 0 100 100" width="30" height="30" aria-hidden="true" focusable="false" aria-label="Twitter">
											<use xlinkHref="#twitter"></use>
										</svg>
									</a>
								</li>
								<li>
									<a href="https://www.youtube.com/ElbakinNetFantasy" title="Chaîne YouTube Elbakin.net [nouvelle fenêtre]" target="_blank" rel="noopener noreferrer">
										<svg viewBox="0 0 100 100" width="30" height="30" aria-hidden="true" focusable="false" aria-label="Youtube">
											<use xlinkHref="#youtube2"></use>
										</svg>
									</a>
								</li>
							</ul>
							<Link to="/compte/" className="btn-compte">
								<span>Se connecter</span>
								<svg viewBox="0 0 100 100" width="30" height="30" aria-hidden="true" focusable="false" aria-label="Youtube">
									<use xlinkHref="#user"></use>
								</svg>
							</Link>
						</div>
					</div>
				</div>
			</header>
		)
	}
}

const mapStateToProps = () => ({});

const mapDispatchToProps = (dispatch) => {
	return bindActionCreators({ toggleBurger }, dispatch);
};

export default connect(mapStateToProps, mapDispatchToProps)(Header);